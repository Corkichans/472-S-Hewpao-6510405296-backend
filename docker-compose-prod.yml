corkichan
corkichan
ออนไลน์

corkichan — 1/11/2567 18:34
มีชื่อเต็มป่ะ
pepe — 1/11/2567 18:34
product - product size 
pepe — 1/11/2567 19:56
admin@gmail.com
password admin
corkichan — 1/11/2567 20:01
เต็มสิบ
ให้ไอ้คุนเท่าไหร่
pepe — 1/11/2567 20:01
5-7
corkichan — 1/11/2567 20:01
เอาไป 5 
pepe — 1/11/2567 20:03
all standard sizes
10 products
5 clients
4 users (4 region)
4 orders (diff region) เวลาสร้าง order ให้สลับ user ทำ purchase ให้ลูกค้า มันจะแยก region ให้เอง
 
corkichan — 1/11/2567 20:03
เอาเท่านี้หรอ
corkichan — 1/11/2567 22:06
ได้ละๆ
pepe — 1/11/2567 22:06
k
ของกูแก้แล้วแบบไม่ต้องเปลี่ยน interface นะ
เอาของกูมั้ย
แต่ขอลองก่อน เอามารหัสนึง
corkichan — 1/11/2567 22:09
ไม่ต้องก็ได้ขี้เกียจละ
pepe — 1/11/2567 22:09
เอารหัสมาอันนึง
corkichan — 1/11/2567 22:09
จารไม่รู้หรอก
Oi
pepe — 1/11/2567 22:09
ลองๆ
เผื่อของมึงแตกกูจะได้รันของกู
corkichan — 1/11/2567 22:09
kimmy@gmail.com
1
pepe — 1/11/2567 22:10
ผิด
เกียน
corkichan — 1/11/2567 22:10
โม้ละ
กูใส่รหัสนี้ทุกคน555555555
pepe — 1/11/2567 22:11
mail ผิด
แต่ของกูใช้ไม่ได้ละช่างแแม่ง
corkichan — 1/11/2567 22:11
ภาพ
corkichan — 1/11/2567 22:19
เสร็จละ
กูหนีละ
ไม่ลับลู้
pepe — 1/11/2567 22:19
เช็คหลัง 12.00 ที
ด้วย
สร้าง
corkichan — 1/11/2567 22:19
ม่ายาย่ยายายาย
pepe — 1/11/2567 22:19
purchjase ได้จบ
corkichan — 1/11/2567 22:20
โอ้ยๆ
corkichan — 2/11/2567 0:04
สร้างได้ปกตินะ
ลองละ
กู
ไปละ
บายยยยยยยยยยยยยยยย
pepe — 2/11/2567 0:04
เชี่ย logic work
corkichan — 2/11/2567 0:04
ลาก่อน
เจอกันใหม่
เมื่อชาติต้องการ
corkichan — 20/12/2567 19:31
ประเภทไฟล์ที่แนบ: acrobat
PMA1_07.pdf
241.78 KB
corkichan — 29/1/2568 14:11
ส่งต่อแล้ว
roobickgamer@gmail.com
corkichan — วันนี้ เวลา 15:42
https://hub.docker.com/repository/docker/corkichan/hewpao-s-backend/tags/v0.1.0/sha256-ff6de12ba5e6180ecc367a288a531db1ab604983a120cfd6039a1068b4cba045
https://hub.docker.com/repository/docker/corkichan/hewpao-s-frontend/tags/v0.1.0/sha256-cc2d7d6ec4d49f8c06e2e4f13ce4c1e28cff186d257765f0107f486a217cc160
pepe — วันนี้ เวลา 16:44
.
```

services:
  app:
    build:
      context: ./docker/
ขยาย
message.txt
3 KB
docker-compose-prod.yml
pepe — วันนี้ เวลา 16:56
.
```
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
ขยาย
message.txt
3 KB
pepe — วันนี้ เวลา 17:29
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
ขยาย
message.txt
3 KB
push ไปใหม่
file เดิม
เสร็จละบอก
corkichan — วันนี้ เวลา 17:41
review
pepe — วันนี้ เวลา 17:50
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
ขยาย
message.txt
3 KB
pepe — วันนี้ เวลา 18:22
เปลี่ยน config/config.go
SSL true -> false
ภาพ
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FILE_UPLOAD_SIZE_LIMIT_MB: ${FILE_UPLOAD_SIZE_LIMIT_MB}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      S3_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      S3_EXPIRATION: ${S3_EXPIRATION}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      KYC_API_URL: ${KYC_API_URL}
      KYC_API_KEY: ${KYC_API_KEY}
      TZ: Asia/Bangkok
    ports:
      - ${APP_PORT}:9090
    restart: on-failure
    networks:
      - hewpao-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: "postgres:16-alpine"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: "corkichan/hewpao-s-frontend:v0.1.0"
    environment:
      NEXT_PUBLIC_API_BASEURL: ${NEXT_PUBLIC_API_BASEURL}
      AUTH_URL: ${AUTH_URL}
      AUTH_SECRET: ${AUTH_SECERT}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      TZ: Asia/Bangkok
    ports:
      - ${FRONT_PORT}:3000
    restart: on-failure
    networks:
      - hewpao-network

  minio:
    image: "minio/minio:latest"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:9000/minio/health/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
... (7 บรรทัด)
ย่อ
message.txt
3 KB
pepe — วันนี้ เวลา 18:33
นี่
แปป
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FILE_UPLOAD_SIZE_LIMIT_MB: ${FILE_UPLOAD_SIZE_LIMIT_MB}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_EXPIRATION: ${S3_EXPIRATION}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      KYC_API_URL: ${KYC_API_URL}
      KYC_API_KEY: ${KYC_API_KEY}
      TZ: Asia/Bangkok
    ports:
      - ${APP_PORT}:9090
    restart: on-failure
    networks:
      - hewpao-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: "postgres:16-alpine"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: "corkichan/hewpao-s-frontend:v0.1.0"
    environment:
      NEXT_PUBLIC_API_BASEURL: ${NEXT_PUBLIC_API_BASEURL}
      AUTH_URL: ${AUTH_URL}
      AUTH_SECRET: ${AUTH_SECERT}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      TZ: Asia/Bangkok
    ports:
      - ${FRONT_PORT}:3000
    restart: on-failure
    networks:
      - hewpao-network

  minio:
    image: "minio/minio:latest"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:9000/minio/health/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
... (7 บรรทัด)
ย่อ
message.txt
3 KB
pepe — วันนี้ เวลา 18:45
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FILE_UPLOAD_SIZE_LIMIT_MB: ${FILE_UPLOAD_SIZE_LIMIT_MB}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_EXPIRATION: ${S3_EXPIRATION}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      KYC_API_URL: ${KYC_API_URL}
      KYC_API_KEY: ${KYC_API_KEY}
      TZ: Asia/Bangkok
    ports:
      - ${APP_PORT}:9090
    restart: on-failure
    networks:
      - hewpao-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: "postgres:16-alpine"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: "corkichan/hewpao-s-frontend:v0.1.0"
    environment:
      NEXT_PUBLIC_API_BASEURL: ${NEXT_PUBLIC_API_BASEURL}
      AUTH_URL: ${AUTH_URL}
      AUTH_SECRET: ${AUTH_SECERT}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      TZ: Asia/Bangkok
    ports:
      - ${FRONT_PORT}:3000
    restart: on-failure
    networks:
      - hewpao-network

  minio:
    image: "minio/minio:latest"
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:9000/minio/health/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
... (7 บรรทัด)
ย่อ
message.txt
3 KB
push ไป
﻿
pepe
ppu.nn
 
pp_u.nn🥀
services:
  app:
    image: "corkichan/hewpao-s-backend:v0.1.0"
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FILE_UPLOAD_SIZE_LIMIT_MB: ${FILE_UPLOAD_SIZE_LIMIT_MB}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_EXPIRATION: ${S3_EXPIRATION}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      KYC_API_URL: ${KYC_API_URL}
      KYC_API_KEY: ${KYC_API_KEY}
      TZ: Asia/Bangkok
    ports:
      - ${APP_PORT}:9090
    restart: on-failure
    networks:
      - hewpao-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: "postgres:16-alpine"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  front:
    image: "corkichan/hewpao-s-frontend:v0.1.0"
    environment:
      NEXT_PUBLIC_API_BASEURL: ${NEXT_PUBLIC_API_BASEURL}
      AUTH_URL: ${AUTH_URL}
      AUTH_SECRET: ${AUTH_SECERT}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET}
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      TZ: Asia/Bangkok
    ports:
      - ${FRONT_PORT}:3000
    restart: on-failure
    networks:
      - hewpao-network

  minio:
    image: "minio/minio:latest"
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hewpao-network
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:9000/minio/health/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local
  minio-data:
    driver: local

networks:
  hewpao-network:
    driver: bridge
message.txt
3 KB